<?php

/**
 * @file
 * Main functionality for ex module.
 */

module_load_include('inc', 'system', 'system.admin');

/**
 * Implements hook_menu().
 */
function ex_menu() {
  $items['admin/ex'] = array(
    'title' => 'My Experiments',
    'description' => 'My Examples settings.',
    'access arguments' => array('administer my experiments'),
    'page callback' => 'ex_config_page',
  );

  $items['admin/ex/data'] = array(
    'title' => 'Data format and types',
    'description' => 'Data format and types: XML, JSON, Webservices etc',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer my experiments'),
    'weight' => 1,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function ex_permission() {
  return array(
    'administer my experiments' => array(
      'title' => t('Administer My Experiments'),
      'description' => t('Perform administration tasks for My Experiments module.'),
    ),
  );
}

/**
 * Provides My Experiments administration overview page.
 * system_admin_config_page() is a source for this function.
 * @see system_admin_config_page()
 *
 * @return string
 */
function ex_config_page() {
  $blocks = array();
  if ($admin = db_query("SELECT menu_name, mlid FROM {menu_links} WHERE link_path = 'admin/ex' AND module = 'system'")->fetchAssoc()) {
    $result = db_query("
      SELECT m.*, ml.*
      FROM {menu_links} ml
      INNER JOIN {menu_router} m ON ml.router_path = m.path
      WHERE ml.link_path <> 'admin/help' AND menu_name = :menu_name AND ml.plid = :mlid AND hidden = 0", $admin, array('fetch' => PDO::FETCH_ASSOC));

    foreach ($result as $item) {
      _menu_link_translate($item);
      if (!$item['access']) {
        continue;
      }
      // The link description, either derived from 'description' in hook_menu()
      // or customized via menu module is used as title attribute.
      if (!empty($item['localized_options']['attributes']['title'])) {
        $item['description'] = $item['localized_options']['attributes']['title'];
        unset($item['localized_options']['attributes']['title']);
      }
      $block = $item;
      $block['content'] = '';
      $block['content'] .= theme('admin_block_content', array('content' => system_admin_menu_block($item)));
      if (!empty($block['content'])) {
        $block['show'] = TRUE;
      }

      // Prepare for sorting as in function _menu_tree_check_access().
      // The weight is offset so it is always positive, with a uniform 5-digits.
      $blocks[(50000 + $item['weight']) . ' ' . $item['title'] . ' ' . $item['mlid']] = $block;
    }
  }
  if ($blocks) {
    ksort($blocks);
    return theme('admin_page', array('blocks' => $blocks));
  }
  else {
    return t('You do not have any administrative items.');
  }
}
